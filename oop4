package sample;

import javafx.animation.AnimationTimer;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.stage.Stage;

public class Controller
{
    public boolean running = true;
    public int tickCount = 0;
    public int width = 725;
    public int height = 768;
    Input input;
    Operation ops = new Operation();

    public void run(Stage primaryStage)
    {
        primaryStage.setTitle("BRICK BREAKER FOR OOP");
        Group root = new Group();
        Scene scene = new Scene(root);
        input = new Input(scene);
        primaryStage.setScene(scene);
        Canvas canvas = new Canvas(width,height);
        root.getChildren().add(canvas);
        GraphicsContext gc = canvas.getGraphicsContext2D();

        primaryStage.setResizable(false);
        primaryStage.show();

        final long startNanoTime = System.nanoTime();

        new AnimationTimer()
        {
            long lastTime = System.nanoTime();
            double nsPerTick =1000000000D/60D;

            int frames = 0;
            int ticks = 0;

            long lastTimer = System.currentTimeMillis();
            double delta = 0;

            @Override
            public void handle(long currentNanoTime)
            {
                double t = (currentNanoTime - startNanoTime) / 1000000000.0;

                tick(input);
                ticks++;
                render(gc,t);
                frames++;
                if(System.currentTimeMillis() - lastTimer >=1000)
                {
                    lastTimer +=1000;
                    frames =0;
                    ticks = 0;
                }
            }
        }.start();
    }

    public void tick(Input input)
    {
        tickCount++;
        ops.levelTick( input, tickCount);
    }

    public void render(GraphicsContext gc, double t)
    {
        ops.levelRender( gc,t);
    }
}
